CSCB58 Project Report: Winter 2020

Team Member A
-------------
First Name: Tony
Last Name: Attalla
Student Number: 10039774158
UofT E-mail Address: tony.attalla@mail.utoronto.ca

Team Member B
-------------
First Name: Alexander
Last Name: Greff
Student Number: 1004254497
UofT E-mail Address: alex.greff@mail.utoronto.ca

Team Member C (Optional)
-------------
First Name: Anton
Last Name: Kaminsky
Student Number: 1004431992
UofT E-mail Address: anton.kaminsky@mail.utoronto.ca

Team Member D (Optional)
-------------
First Name: Chedy
Last Name: Sankar
Student Number: 1004174895
UofT E-mail Address: chedy.sankar@mail.utoronto.ca



Project Plan
--------

Project Title: DE2Pac Synthesizer


Provide a one paragraph description of your project:

DE2Pac is a basic synthesizer that will allow the user to create sounds from two oscillator sources and configure modulations to specific parameters using an ADSR envelope.
A basic UI will be displayed on the VGA out, showing the user the current state of the synthesizer as well as their current selections.
The user will be able to select the current module (oscillator A, oscillator B, ASDR envelope) and the current parameter (oscillator A => wave, oscillator A => volume, etc) using the switches on the DE2 board.
The user then can configure the value for the selected parameter using switches.
The user then applies and stores the currently selected value using a key.

In terms of team structure our group of four will divide up the responsibilities of the project into two "squads" of two:
Squad A will be responsible for setting up core synthesizer functionality which includes
- PS2 keyboard input (acts as our piano keyboard which we use to input the notes to play)
- Oscillators (x2) used to generate the sound (square, sine, saw, triangle)
- ASDR envelope (x1) used to control the volume of the sound overtime as it gets played. The envelope will have 4 preset configurations that the user can select between.

Squad B is responsible for setting up the VGA view layer of the synthesizer. 
They will create areas on the screen showing the current state for the following modules:
- Oscillators (x2)
- ADSR envelope (x1)
Each module box will have selection outlines that toggle to indicate if they are currently selected or not based off the current switch inputs.



What is your plan for the first week?
Squad A:
Write some code to get the audio controller to play some basic notes/tones.

Squad B: 
Get the drawing of the basic module shapes (i.e. a hollow rectangle) as well as some letters/words.



What is your plan for the second week?
Squad A:
Have oscillator and ADSR envelopes built. Have them hooked up and working with switches and keys and the PS2 keyboard.

Squad B: 
Have oscillator and ASDR envelope modules display on the VGA output and have selections highlights changed based off hardcoded test inputs (there is no communication with the core synthesizer yet).



What is your plan for the third week?

Squad A/Squad B:
Integrate the core synthesizer with the VGA display system and get the project in a demoable state.



What is your backup plan if things donâ€™t work out as planned?

If squad A starts falling behind we will drop the ADSR envelope module and solely work on the oscillator module. 

If squad B starts falling behind, we will drop the ADSR envelope module and use the extra time squad A gains to help squad B get everything working (notice that since the ASDR envelope module is dropped, less work will be needed to be done for squad B as a result).


Weekly Reports
--------------
<In this space, provide a report each week of what worked and what didn't, and what (if any) changes were made to your proposal)>


[This is an example of a report where things didn't go so well.]
Week 1: 
	We added and tested the sensors and the main FSM. 
	The distance sensor we had intended to use didn't work as expected (wasn't precise enough at further distances, only seems to work accurately within 5-10cm), so instead we've decided to change the project to use a light sensor instead.
	Had trouble getting the FSM to work (kept getting stuck in state 101, took longer to debug than expected), so we may not be able to add the high score feature. We have updated that in the project description as an optional feature.



References
----------
<In this space clearly indicate all external sources used in this project. If you used anyone else's code (from previous B58 projects or other sources) clearly indicate what you used and where you found it. Usage of any material not credited in this space will be considered plagiarism. It is absolutely OK and expected to update this section as you progress in the projected.>

<Make sure to document what YOU added on top of the existing work, especially if you work with a previous project. What is it that YOU added?>

DE2 Demo Synthesizer Project: http://download.terasic.com/downloads/cd-rom/de2-115/
- src/PS2_Keyboard/ps2_keyboard.v (taken mostly line-for-line but modified a bit to suit our needs)

Audio Controller: http://www.eecg.utoronto.ca/~jayar/ece241_08F/AudioVideoCores/audio/audio.html
- src/Audio_Controller/*

Audio and Video-in Configuration Module: http://www.eecg.utoronto.ca/~jayar/ece241_08F/AudioVideoCores/avconf/avconf.html
- src/avconf/*

From Class:
- src/hex/HexDecoder.v

ADSR envelope generator: https://github.com/gundy/tiny-synth
- src/synthesizer/adsr/eight_bit_exponential_decay_lookup.v
- src/synthesizer/adsr/envelope_gen.v

Repo & Video
------------
<At the end of the project, provide links to your code repository and presentation video (and passwords if not public>

